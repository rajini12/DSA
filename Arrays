#Search given element
#linear search

def linearsearch(arr,element):
  for index in range(0,len(arr)):
    if arr[index] == element:
      return index+1
  return -1

arr=[10,20,30,50,76]
element=50
print(linearsearch(arr,element))



#Function to insert a new element at a given position

arr=[2,5,7,4,3]
element=6
insertat=3

def insertfunction(arr,element,insertat):
  for idx,val in enumerate(arr):
    if idx==insertat:
      arr=arr[0:idx]+[element]+arr[id:]
  return arr
print(insertfunction(arr,element,insertat)


#Function to delete element in an array

arr=[6,5,7,3,5]
element=7
newarr=[]
def deleteelement(arr,element):
  for i,val in enumerate(arr):
    if val != element:
      newarr.append(val)
  return newarr
print(deleteelement(arr,element))
    
    
#function to reverse an arr

arr=[6,5,7,3,5]
element=7
newarr=[]
def revarr(arr):
    newarr=arr[::-1]
    return newarr
print(revarr(arr))




#left rotate arr
def left_rotate(arr, num):
    tmp = arr[0]
    for index in range(1, num):
        arr[index - 1] = arr[index]
    arr[num - 1] = tmp
arr = [1, 2, 3, 4, 5]
num = 4

print("Before Left Rotation:", arr)

left_rotate(arr, num)
print("After '1' Left Rotation:", arr)




#left rotate array by d places
def reverse(lst,l,r):
    while(l<r):
        lst[l],lst[r]=lst[r],lst[l]
        l+=1
        r-=1
        
def optimized(l,d):
    n=len(l)
    reverse(l,0,d-1)
    reverse(l,d,n-1)
    reverse(l,0,n-1)
    
l=[10,20,30,40,50]
d=3
optimized(l,d)
print(l)
    
#right rotate array by d places 
def reverse(lst,l,r):
    while(l<r):
        lst[l],lst[r]=lst[r],lst[l]
        l+=1
        r-=1
        
def optimized(l,d):
    n=len(l)
    reverse(l,0,n-1)
    reverse(l,0,d-1)
    reverse(l,d,n-1)
    
l=[10,20,30,40,50]
d=3
optimized(l,d)
print(l)


#MOVE ALL ZEOS TO AN END
A = [5, 6, 0, 4, 6, 0, 9, 0, 8]
n = len(A)
j = 0
for i in range(n):
    if A[i] != 0:
        A[i], A[j] = A[j], A[i]  
        j += 1
print(A)  


#leaders in an array 

def leaderprint(arr,n):
    for i in range(0,n):
        for j in range(i,n):
            if(arr[i]<arr[j]):
                break
            if(j==n-1):
                print(arr[i])

arr=[2,3,5,7,3,1,7,5,3]
print(arr)
n=len(arr)
leaderprint(arr,n)



#maximun difference between two elements such that larger element appears after the smaller number
arr=[1,2,90,10,110]
max_diff=arr[1]-arr[0]
for i in range(len(arr)):
    for j in range(i+1,len(arr)):
        if (arr[j]-arr[i]>max_diff):
            max_diff=arr[j]-arr[i]
print(max_diff)


#best time to buy and sell stock
def maxProfit(prices):
  if len(prices)==0:
    return 0
  else:
    max_pft=0
    min_price=prices[0]
    for i in range(len(prices)):
      pf1=prices[i]-min_price
      max_pft=max(pf1,max_pft)
      min_price=min(min_price,prices[i])
    return max_pft
 prices=[7,1,5,3,6,4]
 print(maxProfit(prices))
  







